{"ast":null,"code":"var _jsxFileName = \"D:\\\\Framwork2\\\\web209_demo\\\\ps33086\\\\src\\\\contexts\\\\ShoppingContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\n\n/* \r\nSử dụng Context API của React để quản lý trạng thái của giỏ hàng. \r\nContext này sẽ được sử dụng để chia sẻ dữ liệu và hành động giữa các component con trong ứng dụng.\r\nThông qua việc này, Context API cho phép bạn quản lý và chia sẻ dữ liệu giữa các component con một cách hiệu quả, \r\ngiúp giảm thiểu sự phụ thuộc giữa các component và làm cho việc quản lý trạng thái của ứng dụng dễ dàng hơn.\r\n*/\n\n// Tạo một context mới\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShoppingContext = /*#__PURE__*/createContext();\nexport default ShoppingContext;\n\n// Hook custom để sử dụng Context trong các component. Hook này sẽ trả về giá trị của Context hiện tại.\nexport const useShoppingContext = () => {\n  _s();\n  return useContext(ShoppingContext);\n};\n\n// Component Provider cung cấp dữ liệu cho các component con\n_s(useShoppingContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ShoppingContextProvider = ({\n  children\n}) => {\n  _s2();\n  // useState() và useEffect(): Sử dụng để quản lý trạng thái (state) của danh sách sản phẩm trong giỏ hàng và lưu trữ dữ liệu vào localStorage.\n  // State để lưu trữ danh sách sản phẩm trong giỏ hàng, ban đầu lấy từ localStorage\n  const [cartItems, setCartItems] = useState(() => {\n    const jsonCartData = localStorage.getItem('shopping_cart');\n    return jsonCartData ? JSON.parse(jsonCartData) : [];\n  });\n\n  // useEffect để lưu danh sách sản phẩm vào localStorage mỗi khi thay đổi\n  useEffect(() => {\n    localStorage.setItem('shopping_cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Các hàm xử lý thêm, giảm số lượng và xóa sản phẩm trong giỏ hàng, được truyền vào giá trị của Provider để các component con có thể sử dụng.\n  // Tính toán số lượng sản phẩm trong giỏ hàng\n  const cartQty = cartItems.reduce((qty, item) => qty + item.qty, 0);\n\n  // Tính toán tổng giá tiền của các sản phẩm trong giỏ hàng\n  const totalPrice = cartItems.reduce((total, item) => total + item.qty * item.price, 0);\n\n  // Hàm tính toán tăng số lượng sản phẩm trong giỏ hàng\n  const increaseQty = _id => {\n    const currentCartItem = cartItems.find(item => item._id === _id);\n    if (currentCartItem) {\n      const newItems = cartItems.map(item => {\n        if (item._id === _id) {\n          return {\n            ...item,\n            qty: item.qty + 1\n          };\n        } else {\n          return item;\n        }\n      });\n      setCartItems(newItems);\n    }\n  };\n\n  // Hàm giảm số lượng sản phẩm trong giỏ hàng\n  const decreaseQty = _id => {\n    const currentCartItem = cartItems.find(item => item._id === _id);\n    if (currentCartItem) {\n      if (currentCartItem.qty === 1) {\n        removeCartItem(_id);\n      } else {\n        const newItems = cartItems.map(item => {\n          if (item._id === _id) {\n            return {\n              ...item,\n              qty: item.qty - 1\n            };\n          } else {\n            return item;\n          }\n        });\n        setCartItems(newItems);\n      }\n    }\n  };\n  // Hàm thêm sản phẩm vào giỏ hàng\n  const addCartItem = product => {\n    const currentCartItem = cartItems.find(item => item._id === product._id);\n    if (currentCartItem) {\n      const newItems = cartItems.map(item => {\n        if (item._id === product._id) {\n          return {\n            ...item,\n            qty: item.qty + 1\n          };\n        } else {\n          return item;\n        }\n      });\n      setCartItems(newItems);\n    } else {\n      const newItem = {\n        ...product,\n        qty: 1\n      };\n      setCartItems([...cartItems, newItem]);\n    }\n  };\n\n  // Hàm xóa sản phẩm khỏi giỏ hàng\n  const removeCartItem = _id => {\n    const newItems = cartItems.filter(item => item._id !== _id);\n    setCartItems(newItems);\n  };\n\n  // Hàm xóa toàn bộ sản phẩm trong giỏ hàng\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Trả về Provider của ShoppingContext với các giá trị và hàm xử lý\n  // Component Provider của Context, cung cấp các giá trị và hàm xử lý cho các component con bên trong\n  return /*#__PURE__*/_jsxDEV(ShoppingContext.Provider, {\n    value: {\n      cartItems,\n      cartQty,\n      totalPrice,\n      increaseQty,\n      decreaseQty,\n      addCartItem,\n      removeCartItem,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s2(ShoppingContextProvider, \"rew5jEabLD2JLa9mPnfxk+L0xtE=\");\n_c = ShoppingContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShoppingContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ShoppingContext","useShoppingContext","_s","ShoppingContextProvider","children","_s2","cartItems","setCartItems","jsonCartData","localStorage","getItem","JSON","parse","setItem","stringify","cartQty","reduce","qty","item","totalPrice","total","price","increaseQty","_id","currentCartItem","find","newItems","map","decreaseQty","removeCartItem","addCartItem","product","newItem","filter","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Framwork2/web209_demo/ps33086/src/contexts/ShoppingContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n/* \r\nSử dụng Context API của React để quản lý trạng thái của giỏ hàng. \r\nContext này sẽ được sử dụng để chia sẻ dữ liệu và hành động giữa các component con trong ứng dụng.\r\nThông qua việc này, Context API cho phép bạn quản lý và chia sẻ dữ liệu giữa các component con một cách hiệu quả, \r\ngiúp giảm thiểu sự phụ thuộc giữa các component và làm cho việc quản lý trạng thái của ứng dụng dễ dàng hơn.\r\n*/\r\n\r\n// Tạo một context mới\r\nconst ShoppingContext = createContext();\r\nexport default ShoppingContext;\r\n\r\n// Hook custom để sử dụng Context trong các component. Hook này sẽ trả về giá trị của Context hiện tại.\r\nexport const useShoppingContext = () => useContext(ShoppingContext);\r\n\r\n// Component Provider cung cấp dữ liệu cho các component con\r\nexport const ShoppingContextProvider = ({ children }) => {\r\n    // useState() và useEffect(): Sử dụng để quản lý trạng thái (state) của danh sách sản phẩm trong giỏ hàng và lưu trữ dữ liệu vào localStorage.\r\n    // State để lưu trữ danh sách sản phẩm trong giỏ hàng, ban đầu lấy từ localStorage\r\n    const [cartItems, setCartItems] = useState(() => {\r\n        const jsonCartData = localStorage.getItem('shopping_cart');\r\n        return jsonCartData ? JSON.parse(jsonCartData) : [];\r\n    });\r\n\r\n    // useEffect để lưu danh sách sản phẩm vào localStorage mỗi khi thay đổi\r\n    useEffect(() => {\r\n        localStorage.setItem('shopping_cart', JSON.stringify(cartItems));\r\n    }, [cartItems]);\r\n\r\n    // Các hàm xử lý thêm, giảm số lượng và xóa sản phẩm trong giỏ hàng, được truyền vào giá trị của Provider để các component con có thể sử dụng.\r\n    // Tính toán số lượng sản phẩm trong giỏ hàng\r\n    const cartQty = cartItems.reduce((qty, item) => qty + item.qty, 0);\r\n\r\n    // Tính toán tổng giá tiền của các sản phẩm trong giỏ hàng\r\n    const totalPrice = cartItems.reduce((total, item) => total + item.qty * item.price, 0);\r\n\r\n    // Hàm tính toán tăng số lượng sản phẩm trong giỏ hàng\r\n    const increaseQty = (_id) => {\r\n        const currentCartItem = cartItems.find(item => item._id === _id);\r\n        if (currentCartItem) {\r\n            const newItems = cartItems.map(item => {\r\n                if (item._id === _id) {\r\n                    return { ...item, qty: item.qty + 1 };\r\n                } else {\r\n                    return item;\r\n                }\r\n            });\r\n            setCartItems(newItems);\r\n        }\r\n    };\r\n\r\n    // Hàm giảm số lượng sản phẩm trong giỏ hàng\r\n    const decreaseQty = (_id) => {\r\n        const currentCartItem = cartItems.find(item => item._id === _id);\r\n        if (currentCartItem) {\r\n            if (currentCartItem.qty === 1) {\r\n                removeCartItem(_id);\r\n            } else {\r\n                const newItems = cartItems.map(item => {\r\n                    if (item._id === _id) {\r\n                        return { ...item, qty: item.qty - 1 };\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n                setCartItems(newItems);\r\n            }\r\n        }\r\n    };\r\n    // Hàm thêm sản phẩm vào giỏ hàng\r\n    const addCartItem = (product) => {\r\n        const currentCartItem = cartItems.find(item => item._id === product._id);\r\n        if (currentCartItem) {\r\n            const newItems = cartItems.map(item => {\r\n                if (item._id === product._id) {\r\n                    return { ...item, qty: item.qty + 1 };\r\n                } else {\r\n                    return item;\r\n                }\r\n            });\r\n            setCartItems(newItems);\r\n        } else {\r\n            const newItem = { ...product, qty: 1 };\r\n            setCartItems([...cartItems, newItem]);\r\n        }\r\n    };\r\n\r\n    // Hàm xóa sản phẩm khỏi giỏ hàng\r\n    const removeCartItem = (_id) => {\r\n        const newItems = cartItems.filter(item => item._id !== _id);\r\n        setCartItems(newItems);\r\n    };\r\n\r\n    // Hàm xóa toàn bộ sản phẩm trong giỏ hàng\r\n    const clearCart = () => {\r\n        setCartItems([]);\r\n    };\r\n\r\n    // Trả về Provider của ShoppingContext với các giá trị và hàm xử lý\r\n    // Component Provider của Context, cung cấp các giá trị và hàm xử lý cho các component con bên trong\r\n    return (\r\n        <ShoppingContext.Provider value={{ cartItems, cartQty, totalPrice, increaseQty, decreaseQty, addCartItem, removeCartItem, clearCart }}>\r\n            {children}\r\n        </ShoppingContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}